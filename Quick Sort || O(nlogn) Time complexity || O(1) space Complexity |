#include<iostream>
#include<cmath>
#include<vector>
using namespace std;

//Ascending Order ||

int find(int arr[] , int low, int high){
  int i = low;
  int j = high;
  int pivot = arr[low];
  while(i<j){
    while(arr[low]<arr[i] && i<=high-1){
      i++;
    }
    while(arr[low]<arr[j] && j>=low+1){
      j--;
    }
    swap(arr[i],arr[j]);
  }
  swap(arr[low],arr[j]);
  return j;
}
void QS(int arr[],int low ,int high){
  if(low<high){
    int partition = find(arr,low,high);
    QS(arr,low,partition-1);
    QS(arr,partition+1,high);
  }
}
int main(){
  int arr[]={5,100,3,56,0,1};
  int size = 6;
  QS(arr,0,size);
  for(int i=0; i<7; i++){
    cout<<arr[i]<<" ";
  }
  return 0;
____________________________________________________________________________________________________________
____________________________________________________________________________________________________________

#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
//Descending Order
int find(int arr[] , int low, int high){
  int i = low;
  int j = high;
  int pivot = arr[low];
  while(i<j){
    while(arr[low]>arr[i] && i<=high-1){
      i++;
    }
    while(arr[low]>arr[j] && j>=low+1){
      j--;
    }
    swap(arr[i],arr[j]);
  }
  swap(arr[low],arr[j]);
  return j;
}
void QS(int arr[],int low ,int high){
  if(low<high){
    int partition = find(arr,low,high);
    QS(arr,low,partition-1);
    QS(arr,partition+1,high);
  }
}
int main(){
  int arr[]={5,100,3,56,0,1};
  int size = 6;
  QS(arr,0,size);
  for(int i=0; i<7; i++){
    cout<<arr[i]<<" ";
  }
  return 0;
}
